plugins {
    id("com.android.application")
}

android {
    namespace = "com.example.itinerarybuddy"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.example.itinerarybuddy"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
    }
    dataBinding {
        enabled = true
    }
}

task myassemble(type: GradleBuild) {
    tasks = ['assemble']
}

task javadoc(type: Javadoc, dependsOn: 'myassemble') {
    doFirst {
        configurations.implementation
                .filter { it.name.endsWith('.aar') }
                .each { aar ->
                    copy {
                        from zipTree(aar)
                        include "**/classes.jar"
                        into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
                    }
                }
        copy {
            from "$buildDir/generated/data_binding_base_class_source_out/debug/out/com/example/itinerarybuddy/databinding"
            // change path
            into 'src/main/java/com/example/itinerarybuddy'     // change path
        }
    }

    configurations.implementation.setCanBeResolved(true)
    classpath = files(new File("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"))
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
    classpath += fileTree(dir: "$buildDir/tmp/aarsToJars/")

    android.applicationVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }

    source = android.sourceSets.main.java.srcDirs
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    options.memberLevel = JavadocMemberLevel.PRIVATE
    failOnError false
    exclude '**/R.java'

    doLast {
        delete 'src/main/java/com/example/itinerarybuddy/databinding'       // change path
    }
}


dependencies {
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.11.0")
    implementation ("com.android.volley:volley:1.2.1")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.7.0")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0")
    implementation("androidx.navigation:navigation-fragment:2.7.7")
    implementation("androidx.navigation:navigation-ui:2.7.7")
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
}