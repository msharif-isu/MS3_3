// Generated by view binder compiler. Do not edit!
package com.example.itinerarybuddy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.itinerarybuddy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScheduleHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView DayTitle;

  @NonNull
  public final TextView headerTextViewNote;

  @NonNull
  public final TextView headerTextViewPlaces;

  @NonNull
  public final TextView headerTextViewTime;

  private ItemScheduleHeaderBinding(@NonNull LinearLayout rootView, @NonNull TextView DayTitle,
      @NonNull TextView headerTextViewNote, @NonNull TextView headerTextViewPlaces,
      @NonNull TextView headerTextViewTime) {
    this.rootView = rootView;
    this.DayTitle = DayTitle;
    this.headerTextViewNote = headerTextViewNote;
    this.headerTextViewPlaces = headerTextViewPlaces;
    this.headerTextViewTime = headerTextViewTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScheduleHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScheduleHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_schedule_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScheduleHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DayTitle;
      TextView DayTitle = ViewBindings.findChildViewById(rootView, id);
      if (DayTitle == null) {
        break missingId;
      }

      id = R.id.headerTextViewNote;
      TextView headerTextViewNote = ViewBindings.findChildViewById(rootView, id);
      if (headerTextViewNote == null) {
        break missingId;
      }

      id = R.id.headerTextViewPlaces;
      TextView headerTextViewPlaces = ViewBindings.findChildViewById(rootView, id);
      if (headerTextViewPlaces == null) {
        break missingId;
      }

      id = R.id.headerTextViewTime;
      TextView headerTextViewTime = ViewBindings.findChildViewById(rootView, id);
      if (headerTextViewTime == null) {
        break missingId;
      }

      return new ItemScheduleHeaderBinding((LinearLayout) rootView, DayTitle, headerTextViewNote,
          headerTextViewPlaces, headerTextViewTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
