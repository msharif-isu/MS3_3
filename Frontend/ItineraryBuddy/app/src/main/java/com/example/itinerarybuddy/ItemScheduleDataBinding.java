// Generated by view binder compiler. Do not edit!
package com.example.itinerarybuddy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TableRow;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.itinerarybuddy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScheduleDataBinding implements ViewBinding {
  @NonNull
  private final TableRow rootView;

  @NonNull
  public final EditText dataEditTextNote;

  @NonNull
  public final EditText dataEditTextPlaces;

  @NonNull
  public final EditText dataEditTextTime;

  private ItemScheduleDataBinding(@NonNull TableRow rootView, @NonNull EditText dataEditTextNote,
      @NonNull EditText dataEditTextPlaces, @NonNull EditText dataEditTextTime) {
    this.rootView = rootView;
    this.dataEditTextNote = dataEditTextNote;
    this.dataEditTextPlaces = dataEditTextPlaces;
    this.dataEditTextTime = dataEditTextTime;
  }

  @Override
  @NonNull
  public TableRow getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScheduleDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScheduleDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_schedule_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScheduleDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dataEditTextNote;
      EditText dataEditTextNote = ViewBindings.findChildViewById(rootView, id);
      if (dataEditTextNote == null) {
        break missingId;
      }

      id = R.id.dataEditTextPlaces;
      EditText dataEditTextPlaces = ViewBindings.findChildViewById(rootView, id);
      if (dataEditTextPlaces == null) {
        break missingId;
      }

      id = R.id.dataEditTextTime;
      EditText dataEditTextTime = ViewBindings.findChildViewById(rootView, id);
      if (dataEditTextTime == null) {
        break missingId;
      }

      return new ItemScheduleDataBinding((TableRow) rootView, dataEditTextNote, dataEditTextPlaces,
          dataEditTextTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
